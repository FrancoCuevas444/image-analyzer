{"version":3,"sources":["classesConfig.js","ClassSelector.js","MetadataTooltip.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","property","name","options","isMultiSelect","buttonGroupStyles","makeStyles","root","alignItems","buttonStyles","background","border","borderRadius","boxShadow","color","height","padding","justifyContent","selected","generateOptions","selectedOptions","setSelectedOptions","onValueChange","classesButton","classesButtonGroup","finalOptions","forEach","option","push","ToggleButton","classes","value","ToggleButtonGroup","className","onChange","event","newValue","exclusive","ClassSelector","props","defaultOptions","useState","CustomCheckbox","withStyles","theme","fill","Checkbox","getMetadataOptions","damagedPartsMetadata","checks","p","part","toUpperCase","Info","MetadataTooltip","metadata","complaint","accident","brand","model","type","car_year","damage_comment","damaged_parts","generateFilters","handleFilterChange","currentImageState","filters","classesConfig","classConfig","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","React","useEffect","window","addEventListener","removeEventListener","App","imageInfo","setImageInfo","currentImageIndex","setCurrentImageIndex","leftPress","rightPress","fetch","then","resp","a","json","jsonResp","console","log","ok","Object","keys","length","catch","err","loadImageInfo","currentImageName","filename","state","method","headers","body","JSON","stringify","response","data","reason","saveImageState","prevState","imageUrl","filterProperty","newImageInfo","parse","imageSrc","style","width","fillAvailableSpace","switchSides","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f0afc7.chunk.js","sourcesContent":["const classesConfig = [\n    {\n        property: \"problems\",\n        name: \"Problems\",\n        options: [\"hard_to_see_damage\", \"blurry\", \"dark\", \"flash/sun\", \"missing_or_wrong_vehicle\", \"other\"],\n        isMultiSelect: true,\n    },\n    {\n        property: \"photo_angle\",\n        name: \"Photo Angle\",\n        options: [\"full_car\", \"half_car\", \"zoomed_part\"],\n        isMultiSelect: false,\n    }\n]\n\nmodule.exports = classesConfig;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nconst buttonGroupStyles = makeStyles({\n    root: {\n        alignItems: 'center',\n    }\n});\n\nconst buttonStyles = makeStyles({\n    root: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        color: 'white',\n        height: 26,\n        padding: '0 10px',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    selected: {\n        background: 'linear-gradient(45deg, #6FE0A5 30%, #A5FF53 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: '0 3px 5px 2px rgba(105, 255, 137, .3)',\n        color: 'white',\n        height: 26,\n        padding: '0 10px',\n    },\n});\n\nfunction ClassSelector(props) {\n    const { name, isMultiSelect, options, defaultOptions=[], onValueChange } = props;\n    const [selectedOptions, setSelectedOptions] = useState(defaultOptions);\n    const classesButton = buttonStyles();\n    const classesButtonGroup = buttonGroupStyles();\n\n    return (\n        <div className={\"flex-row\"}>\n            <h3>{name}</h3>\n            { generateOptions(options, selectedOptions, setSelectedOptions, isMultiSelect, onValueChange, classesButton, classesButtonGroup) }\n        </div>\n    )\n}\n\nfunction generateOptions(options, selectedOptions, setSelectedOptions, isMultiSelect, onValueChange, classesButton, classesButtonGroup) {\n    let finalOptions = [];\n    options.forEach(option => {\n        finalOptions.push(\n            <ToggleButton classes={{root: classesButton.root, selected: classesButton.selected}} key={option} value={option}>\n                {option}\n            </ToggleButton>\n        );\n    })\n\n    const handleChange = (event, newValue) => {\n        setSelectedOptions(newValue);\n        onValueChange(newValue);\n    };\n\n    return (\n        <ToggleButtonGroup\n            className={classesButtonGroup.root}\n            value={selectedOptions}\n            onChange={handleChange}\n            exclusive={!isMultiSelect}\n        >\n            {finalOptions}\n        </ToggleButtonGroup>\n    )\n}\n\nexport default ClassSelector;","import React, {useState} from 'react';\nimport {Checkbox} from \"@material-ui/core\";\nimport {withStyles} from '@material-ui/core/styles';\nimport {InfoIcon} from '@mui/icons-material/Info'\n\n/*\n{\n    \"complaint\": \"M204933\",\n    \"accident\": \"9241/2020\",\n    \"brand\": \"CHEVROLET\",\n    \"model\": \"N4PONIX 1.4 LTZ\",\n    \"type\": \"car\",\n    \"color\": \"AZUL\",\n    \"damage_comment\": \"PTA DEL DER Y ZOCALO DER\",\n    \"car_year\": 2013,\n    \"damaged_parts\": [\n        {\n            \"part\": \"back_lamp\",\n            \"part_text\": \"FAROL TRASERO DER\",\n            \"task\": \"replace\",\n            \"hours\": 0.25\n        }\n    ]\n}\n */\n\nconst checkboxStyles = theme => ({\n    root: {\n        color: 'white',\n        fill: 'white',\n    },\n    '& .MuiSvgIcon-root': {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    }\n});\n\nconst CustomCheckbox = withStyles(checkboxStyles)(Checkbox);\n\nfunction MetadataTooltip(props) {\n    const {metadata} = props;\n    const [selectedParts, setSelectedParts] = useState([]);\n\n    return (\n        <div className={\"metadata-box\"}>\n            <h3>Metadata</h3>\n            <div className={\"flex-column\"}>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Denuncia:</h4>\n                    <p className={\"metadata-values\"}>{metadata.complaint}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Siniestro:</h4>\n                    <p className={\"metadata-values\"}>{metadata.accident}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Marca:</h4>\n                    <p className={\"metadata-values\"}>{metadata.brand}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Modelo:</h4>\n                    <p className={\"metadata-values\"}>{metadata.model}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Tipo:</h4>\n                    <p className={\"metadata-values\"}>{metadata.type}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Color:</h4>\n                    <p className={\"metadata-values\"}>{metadata.color}</p>\n                </div>\n                <div className={\"flex-row\"}>\n                    <h4 className={\"metadata-labels\"}>Year:</h4>\n                    <p className={\"metadata-values\"}>{metadata.car_year}</p>\n                </div>\n            </div>\n            <h3>Parts</h3>\n            <p>{metadata.damage_comment}</p>\n            <div className={\"flex-row\"}>\n                {getMetadataOptions(metadata.damaged_parts ? metadata.damaged_parts : [])}\n            </div>\n        </div>\n    )\n}\n\nfunction getMetadataOptions(damagedPartsMetadata) {\n    let checks = [];\n    damagedPartsMetadata.forEach(p => {\n        checks.push(\n            <div className={\"flex-row-center\"}>\n                <CustomCheckbox color=\"default\"/>\n                <p>{p.part.toUpperCase()}</p>\n                <InfoIcon />\n            </div>\n        )\n    });\n\n    return (\n        <div className={\"flex-column\"}>\n            {checks}\n        </div>\n    );\n}\n\nexport default MetadataTooltip;","import React, {useState, useEffect} from 'react';\nimport {SideBySideMagnifier} from 'react-image-magnifiers';\nimport ClassSelector from './ClassSelector';\nimport classesConfig from \"./classesConfig\";\nimport './App.css';\nimport MetadataTooltip from \"./MetadataTooltip\";\n\nfunction App() {\n    const [imageInfo, setImageInfo] = useState({});\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n    const leftPress = useKeyPress(\"ArrowLeft\");\n    const rightPress = useKeyPress(\"ArrowRight\");\n\n    const handleFilterChange = function (filterProperty, newValue) {\n        let newImageInfo = JSON.parse(JSON.stringify(imageInfo));\n        newImageInfo.state[filterProperty] = newValue;\n        setImageInfo(newImageInfo);\n    }\n\n    useEffect(() => {\n        loadImageInfo(currentImageIndex, setImageInfo);\n    }, [currentImageIndex]);\n\n    const currentImageName = imageInfo ? imageInfo.filename: \"\";\n    const currentImageState = imageInfo ? imageInfo.state : null;\n\n    useEffect(() => {\n        if (!currentImageState || (Object.keys(currentImageState).length === 0)) {\n            return;\n        }\n\n        saveImageState(currentImageName, currentImageState);\n    }, [currentImageName, currentImageState]);\n\n    useEffect(() => {\n        if (rightPress) {\n            setCurrentImageIndex(prevState => prevState + 1);\n        }\n    }, [rightPress]);\n\n    useEffect(() => {\n        if (leftPress) {\n            setCurrentImageIndex(prevState => prevState - 1);\n        }\n    }, [leftPress]);\n\n    const imageUrl = `/${currentImageName}`;\n\n    return (\n        <div className=\"App\">\n            <div key={currentImageName} className=\"main-container\">\n                <h3>{currentImageName}</h3>\n                {generateFilters(handleFilterChange, currentImageState)}\n                <div className={\"flex-row\"}>\n                    <MetadataTooltip metadata={imageInfo.metadata ? imageInfo.metadata: {}} />\n                    <SideBySideMagnifier\n                        key={imageUrl}\n                        imageSrc={imageUrl}\n                        style={{width: 700}}\n                        fillAvailableSpace={false}\n                        switchSides={false}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction saveImageState(currentImageName, currentImageState) {\n    fetch(`/api/state?filename=${currentImageName}`, {\n        method: \"PUT\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(currentImageState),\n    })\n        .then(response => response.json())\n        .then(data => console.log(data))\n        .catch((reason) => console.log(reason));\n}\n\nfunction loadImageInfo(currentImageIndex, setImageInfo) {\n    fetch(`/api/files/${currentImageIndex}`)\n        .then(async resp => {\n            const jsonResp = await resp.json();\n            console.log(jsonResp);\n            if (resp.ok && jsonResp && Object.keys(jsonResp).length !== 0) {\n                setImageInfo(jsonResp);\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\nfunction generateFilters(handleFilterChange, currentImageState) {\n    let filters = []\n    classesConfig.forEach(classConfig => {\n        filters.push(\n            <ClassSelector\n                key={classConfig.property}\n                property={classConfig.property}\n                name={classConfig.name}\n                options={classConfig.options}\n                isMultiSelect={classConfig.isMultiSelect}\n                onValueChange={(newValue) => handleFilterChange(classConfig.property, newValue)}\n                defaultOptions={currentImageState ? currentImageState[classConfig.property] : []}\n            />\n        );\n    });\n\n    return filters;\n}\n\nconst useKeyPress = function (targetKey) {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    function downHandler({key}) {\n        if (key === targetKey) {\n            setKeyPressed(true);\n        }\n    }\n\n    const upHandler = ({key}) => {\n        if (key === targetKey) {\n            setKeyPressed(false);\n        }\n    };\n\n    React.useEffect(() => {\n        window.addEventListener(\"keydown\", downHandler);\n        window.addEventListener(\"keyup\", upHandler);\n\n        return () => {\n            window.removeEventListener(\"keydown\", downHandler);\n            window.removeEventListener(\"keyup\", upHandler);\n        };\n    });\n\n    return keyPressed;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}